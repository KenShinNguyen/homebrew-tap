diff --git a/VERSION b/VERSION
index 109a6b660a..2f332255ac 100644
--- a/VERSION
+++ b/VERSION
@@ -1 +1 @@
-0.36.0-UNKNOWN
+0.36.0-722-g7480efa62c
diff --git a/meson.build b/meson.build
index 345b591a8c..0e091ca379 100644
--- a/meson.build
+++ b/meson.build
@@ -23,7 +23,7 @@ libavutil = dependency('libavutil', version: '>= 56.70.100')
 libswresample = dependency('libswresample', version: '>= 3.9.100')
 libswscale = dependency('libswscale', version: '>= 5.9.100')
 
-libplacebo = dependency('libplacebo', version: '>=6.338.0')
+libplacebo = dependency('libplacebo', version: '>=6.292.1')
 
 libass = dependency('libass', version: '>= 0.12.2')
 
diff --git a/video/out/mac_common.swift b/video/out/mac_common.swift
index 12d2870add..fd3e2c0018 100644
--- a/video/out/mac_common.swift
+++ b/video/out/mac_common.swift
@@ -111,11 +111,11 @@ class MacCommon: Common {
                                          _ flagsOut: UnsafeMutablePointer<CVOptionFlags>) -> CVReturn
     {
         let frameTimer = mpv?.macOpts.macos_render_timer ?? Int32(RENDER_TIMER_CALLBACK)
-        let signalSwap = { [self] in
-            swapLock.lock()
-            swapTime += 1
-            swapLock.signal()
-            swapLock.unlock()
+        let signalSwap = {
+            self.swapLock.lock()
+            self.swapTime += 1
+            self.swapLock.signal()
+            self.swapLock.unlock()
         }
 
         if frameTimer != RENDER_TIMER_SYSTEM {
diff --git a/filters/f_lavfi.c b/filters/f_lavfi.c
index dd8cd4826a..de3cd52a2a 100644
--- a/filters/f_lavfi.c
+++ b/filters/f_lavfi.c
@@ -1034,7 +1034,11 @@ static const char *get_avopt_type_name(enum AVOptionType type)
     case AV_OPT_TYPE_VIDEO_RATE:        return "fps";
     case AV_OPT_TYPE_DURATION:          return "duration";
     case AV_OPT_TYPE_COLOR:             return "color";
+#if LIBAVUTIL_VERSION_MAJOR < 59
     case AV_OPT_TYPE_CHANNEL_LAYOUT:    return "channellayout";
+#else
+    case AV_OPT_TYPE_CHLAYOUT:          return "channellayout";
+#endif
     case AV_OPT_TYPE_BOOL:              return "bool";
     case AV_OPT_TYPE_CONST: // fallthrough
     default:
diff --git a/filters/f_swresample.c b/filters/f_swresample.c
index 8cb687def0..424a62bcf5 100644
--- a/filters/f_swresample.c
+++ b/filters/f_swresample.c
@@ -23,6 +23,7 @@
 #include <libswresample/swresample.h>

 #include "audio/aframe.h"
+#include "audio/chmap_avchannel.h"
 #include "audio/fmt-conversion.h"
 #include "audio/format.h"
 #include "common/common.h"
@@ -269,14 +270,28 @@ static bool configure_lavrr(struct priv *p, bool verbose)

     out_ch_layout = fudge_layout_conversion(p, in_ch_layout, out_ch_layout);

+#if HAVE_AV_CHANNEL_LAYOUT
     // Real conversion; output is input to avrctx_out.
+    AVChannelLayout in_layout, out_layout;
+    mp_chmap_to_av_layout(&in_layout, &in_lavc);
+    mp_chmap_to_av_layout(&out_layout, &out_lavc);
+    av_opt_set_chlayout(p->avrctx, "in_chlayout",  &in_layout, 0);
+    av_opt_set_chlayout(p->avrctx, "out_chlayout", &out_layout, 0);
+#else
     av_opt_set_int(p->avrctx, "in_channel_layout",  in_ch_layout, 0);
     av_opt_set_int(p->avrctx, "out_channel_layout", out_ch_layout, 0);
+#endif
     av_opt_set_int(p->avrctx, "in_sample_rate",     p->in_rate, 0);
     av_opt_set_int(p->avrctx, "out_sample_rate",    p->out_rate, 0);
     av_opt_set_int(p->avrctx, "in_sample_fmt",      in_samplefmt, 0);
     av_opt_set_int(p->avrctx, "out_sample_fmt",     out_samplefmtp, 0);

+#if HAVE_AV_CHANNEL_LAYOUT
+    AVChannelLayout fake_layout;
+    av_channel_layout_default(&fake_layout, map_out.num);
+    av_opt_set_chlayout(p->avrctx_out, "in_chlayout", &fake_layout, 0);
+    av_opt_set_chlayout(p->avrctx_out, "out_chlayout", &fake_layout, 0);
+#else
     // Just needs the correct number of channels for deplanarization.
     struct mp_chmap fake_chmap;
     mp_chmap_set_unknown(&fake_chmap, map_out.num);
@@ -285,6 +300,7 @@ static bool configure_lavrr(struct priv *p, bool verbose)
         goto error;
     av_opt_set_int(p->avrctx_out, "in_channel_layout",  fake_out_ch_layout, 0);
     av_opt_set_int(p->avrctx_out, "out_channel_layout", fake_out_ch_layout, 0);
+#endif

     av_opt_set_int(p->avrctx_out, "in_sample_fmt",      out_samplefmtp, 0);
     av_opt_set_int(p->avrctx_out, "out_sample_fmt",     out_samplefmt, 0);
diff --git a/filters/f_lavfi.c b/filters/f_lavfi.c
index de3cd52a2a..afc9f2d445 100644
--- a/filters/f_lavfi.c
+++ b/filters/f_lavfi.c
@@ -1035,9 +1035,9 @@ static const char *get_avopt_type_name(enum AVOptionType type)
     case AV_OPT_TYPE_DURATION:          return "duration";
     case AV_OPT_TYPE_COLOR:             return "color";
 #if LIBAVUTIL_VERSION_MAJOR < 59
-    case AV_OPT_TYPE_CHANNEL_LAYOUT:    return "channellayout";
+    case AV_OPT_TYPE_CHANNEL_LAYOUT:    return "ch_layout";
 #else
-    case AV_OPT_TYPE_CHLAYOUT:          return "channellayout";
+    case AV_OPT_TYPE_CHLAYOUT:          return "ch_layout";
 #endif
     case AV_OPT_TYPE_BOOL:              return "bool";
     case AV_OPT_TYPE_CONST: // fallthrough
--
2.44.0

